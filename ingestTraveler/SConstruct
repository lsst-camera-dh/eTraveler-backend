# -*- python -*-
import os.path   #, SCons,glob
import platform

def listFiles(files, **kw):
    allFiles = []
    for file in files:
        globFiles = Glob(file)
        newFiles = []
        for globFile in globFiles:
	    if 'recursive' in kw and kw.get('recursive') and os.path.isdir(globFile.srcnode().abspath) and os.path.basename(globFile.srcnode().abspath) != 'CVS':
	        allFiles+=listFiles([str(Dir('.').srcnode().rel_path(globFile.srcnode()))+"/*"], recursive = True)
	    if os.path.isfile(globFile.srcnode().abspath):
	        allFiles.append(globFile)
    return allFiles

Export('listFiles')

baseEnv = Environment()

# Add options for setting path to mysql client library, mysql headers
AddOption('--mysql-lib-path', dest='mysqlLibPath', nargs=1, type='string',
          action='store', help='path to mysql client library')
AddOption('--mysql-include-path', dest='mysqlIncludePath', nargs=1, 
          type='string', action='store', help='path to mysql headers')
# Add option for boost include path.  Not necessary for most installations;
# boost typically is already accessible, e.g. in /usr/include 
AddOption('--boost-include-path', dest='boostIncludePath', nargs=1, 
          type='string', action='store', help='path to boost headers')

# See if header is really there.   Use supplied path if there is one
if baseEnv.GetOption('mysqlIncludePath'):
    baseEnv.AppendUnique(CPPPATH=[baseEnv.GetOption('mysqlIncludePath')])
if baseEnv.GetOption('boostIncludePath'):
    baseEnv.AppendUnique(CPPPATH=[baseEnv.GetOption('boostIncludePath')])

mysqlLibDir=''
if baseEnv.GetOption('mysqlLibPath'):
    mysqlLibDir = baseEnv.GetOption('mysqlLibPath')
else:
    plat = platform.platform()
    if 'redhat' in plat:     # make a guess where it is
        if 'x86_64' in plat:
            mysqlLibDir = '/usr/lib64/mysql'
        else:
            mysqlLibDir = '/usr/lib/mysql'
if mysqlLibDir == '':
    print '--mysql-path is required on non-redhat systems'
    Exit(1)

baseEnv.AppendUnique(LIBPATH = [mysqlLibDir])
                                  
if not baseEnv.GetOption('help'):
    conf = baseEnv.Clone().Configure()

    if not conf.CheckCHeader('boost/version.hpp'):
        print 'Unable to find boost headers.'
        print 'Is boost installed?'
        print 'If so, specify good value for --boost-include-path'
        Exit(1)


    if not conf.CheckCHeader('mysql/mysql.h'):
        print 'Unable to find mysql headers.'
        print 'Is mysql installed?'
        print 'If so, specify good value for --mysql-include-path'
        Exit(1)

    if not conf.CheckLib('mysqlclient', language='C'):
        print 'Unable to find mysql client library'
        print 'Is mysql installed?'
        print 'If so, specify good value for --mysql-lib-path'
        Exit(1)


# Dirs where things can be installed:
baseEnv['INCDIR'] = Dir('#include')
baseEnv['LIBDIR'] = Dir('#lib')
baseEnv['BINDIR'] = Dir('#bin')

# Externals: YAML under /usr/local
# Mysql in /usr/bin, /usr/lib, etc.
#  Include paths are 
#  among the standard ones, but just in case add /usr/local/include for YAML
baseEnv.AppendUnique(CPPPATH = ['#include'])
baseEnv.AppendUnique(CCFLAGS = '-g')
baseEnv.SConsignFile("signatures/.sconsign.dblite")
Export('baseEnv')

#  Define targets
baseEnv.SConscript('yaml-cpp/SConscript', variant_dir=('yaml-cpp/build'), duplicate=0)
baseEnv.SConscript('src/SConscript', variant_dir=('src/build'), duplicate=0)
